# Generated by Django 4.2.16 on 2025-01-07 22:44

from django.db import migrations, models
import django.db.models.deletion

def convert_user_types(apps, schema_editor):
    UserType = apps.get_model('accounts', 'UserType')
    AccountRequests = apps.get_model('accounts', 'AccountRequests')
    AGOL = apps.get_model('accounts', 'AGOL')
    for portal in AGOL.objects.all():
        roles = portal.roles.filter(is_available=True)
        creator = UserType.objects.create(code='creatorUT', name='Creator', portal=portal)
        roles.update(minimum_compatible_user_type=creator)
        AccountRequests.objects.filter(user_type='creatorUT', response__portal=portal).update(new_user_type=creator)

def revert_user_types(apps, schema_editor):
    AccountRequests = apps.get_model('accounts', 'AccountRequests')
    AccountRequests.objects.update(user_type='creatorUT')

class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0034_agol_email_signature_content'),
    ]

    operations = [
        # migrations.CreateModel(
        #     name='UserType',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('code', models.CharField(max_length=200)),
        #         ('name', models.CharField(max_length=200)),
        #         ('portal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_types', to='accounts.AGOL')),
        #     ],
        #     options={
        #         'verbose_name': 'AGOL/Portal User Type',
        #         'verbose_name_plural': 'AGOL/Portal User Types',
        #     },
        # ),
        # migrations.AddField(
        #     model_name='agolrole',
        #     name='minimum_compatible_user_type',
        #     field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
        #                             to='accounts.usertype'),
        # ),

        # migrations.AddField(
        #     model_name='usertype',
        #     name='hierarchy',
        #     field=models.IntegerField(default=0,
        #                               help_text='This controls if a users account needs to be given a higher user type when approved than what they currently have so that it is compatible with the roles they are assigned to.'),
        # ),
        # migrations.AddField(
        #     model_name='agolrole',
        #     name='hierarchy',
        #     field=models.IntegerField(default=0,
        #                               help_text='This controls if a users account needs to be given a higher role when approved than what they currently have so that it is compatible with the groups they are assigned to.'),
        # ),
        # migrations.AddField(
        #     model_name='accountrequests',
        #     name='existing_user_type',
        #     field=models.CharField(blank=True, max_length=200, null=True),
        # ),
        migrations.AlterModelOptions(
            name='agol',
            options={'verbose_name': 'AGOL/Portal', 'verbose_name_plural': 'AGOL/Portals'},
        ),
        migrations.AlterModelOptions(
            name='agolgroup',
            options={'verbose_name': 'AGOL/Portal Group', 'verbose_name_plural': 'AGOL/Portal Groups'},
        ),
        migrations.AlterModelOptions(
            name='agolrole',
            options={'verbose_name': 'AGOL/Portals Role', 'verbose_name_plural': 'AGOL/Portals Roles'},
        ),
        migrations.AddField(
            model_name='accountrequests',
            name='existing_role',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='accountrequests',
            name='existing_user_type',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='agolrole',
            name='hierarchy',
            field=models.IntegerField(default=0,
                                      help_text='This controls if a users account needs to be given a higher role when approved than what they currently have so that it is compatible with the groups they are assigned to.'),
        ),
        migrations.AlterField(
            model_name='accountrequests',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                    related_name='account_requests', to='accounts.agolrole',
                                    verbose_name='Requested Role'),
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('hierarchy', models.IntegerField(default=0,
                                                  help_text='This controls if a users account needs to be given a higher user type when approved than what they currently have so that it is compatible with the roles they are assigned to.')),
                ('portal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_types',
                                             to='accounts.agol')),
            ],
            options={
                'verbose_name': 'AGOL/Portal User Type',
                'verbose_name_plural': 'AGOL/Portal User Types',
            },
        ),
        migrations.AddField(
            model_name='agolrole',
            name='minimum_compatible_user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                    related_name='roles', to='accounts.usertype'),
        ),
        migrations.AddField(
            model_name='accountrequests',
            name='new_user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                    to='accounts.usertype'),
        ),
        migrations.RunPython(convert_user_types, revert_user_types),
        migrations.RemoveField(
            model_name='accountrequests',
            name='user_type',
        ),
        migrations.RenameField(
            model_name='accountrequests',
            old_name='new_user_type',
            new_name='user_type',
        ),
        migrations.AlterField(
            model_name='accountrequests',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                    to='accounts.usertype', verbose_name='Requested User Type'),
        ),

    ]
